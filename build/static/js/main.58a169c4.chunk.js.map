{"version":3,"sources":["assets/logo.png","context/StateProvider.js","context/reducer.js","components/Search.js","pages/Home.js","hooks/useGoogleSearch.js","apis/keys.js","pages/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","logo","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58a169c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c9b3f1a8.png\";","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import { StateContext } from \"./StateProvider\";\r\n\r\nexport const initialState = {\r\n  term: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_TERM:\r\n      return {\r\n        ...StateContext,\r\n        term: action.term,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from 'react';\r\nimport '../styles/Search.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStateValue } from '../context/StateProvider';\r\nimport { actionTypes } from '../context/reducer';\r\n\r\nfunction Search({ hideButtons = false }) {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const search = e => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"You hit the search button >> \", input)\r\n\r\n        dispatch({\r\n            type: actionTypes.SET_SEARCH_TERM,\r\n            term: input\r\n        })\r\n\r\n        history.push('/search')\r\n    }\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search__input\">\r\n                <SearchIcon className=\"search__inputIcon\" />\r\n                <input value={input} onChange={e => setInput(e.target.value)} />\r\n                <MicIcon />\r\n            </div>\r\n\r\n            {!hideButtons ? (\r\n                <div className=\"search__buttons\">\r\n                <Button type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n                <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            </div>\r\n            ): (\r\n            <div className=\"search__buttons\">\r\n                <Button className=\"search__buttonsHidden\" type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n                <Button className=\"search__buttonsHidden\" variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"../styles/Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Search from '../components/Search';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLeft\">\r\n          <Link to=\"/about\">About</Link>\r\n          <Link to=\"/store\">Store</Link>\r\n        </div>\r\n        <div className=\"home__headerRight\">\r\n          <Link to=\"/mail\">Mail</Link>\r\n          <Link to=\"/images\">Images</Link>\r\n          <AppsIcon />\r\n          <Avatar />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"home__body\">\r\n        <img src={logo} alt=\"Meggle\" />\r\n        <div className=\"home__inputContainer\">\r\n            <Search />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useEffect} from 'react'\r\nimport API_KEY from '../apis/keys';\r\n\r\nconst CONTEXT_KEY = \"6af553d30bc6bc89e\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        }\r\n        fetchData();\r\n    }, [term])\r\n\r\n    return { data }\r\n}\r\n\r\nexport default useGoogleSearch;\r\n","export const API_KEY = \"AIzaSyAi-oAXW1MGDkp6QzdTDvWjU970keuvWqY\";\r\n\r\nexport default API_KEY;","import React from 'react';\r\nimport '../styles/SearchPage.css';\r\nimport { useStateValue } from '../context/StateProvider';\r\nimport useGoogleSearch from '../hooks/useGoogleSearch';\r\nimport logo from '../assets/logo.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from '../components/Search';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DescriptionIcon from '@material-ui/icons/Description'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\r\nimport RoomIcon from '@material-ui/icons/Room'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nfunction SearchPage() {\r\n    const [{ term }, dispatch] = useStateValue();\r\n    // LIVE API\r\n    const { data } = useGoogleSearch(term);\r\n\r\n    // const data = Response;\r\n\r\n    console.log(data);\r\n\r\n    return (\r\n        <div className=\"searchPage\">\r\n            <div className=\"searchPage__header\">\r\n                <Link to=\"/\">\r\n                    <img className=\"searchPage__logo\" src={logo} alt=\"Meggle\"/>\r\n                </Link>\r\n\r\n                <div className=\"searchPage__headerBody\">\r\n                    <Search hideButtons />\r\n\r\n                    <div className=\"searchPage__options\">\r\n                        <div className=\"searchPage__optionsLeft\">\r\n                        <div className=\"searchPage__option\">\r\n                                <SearchIcon />\r\n                                <Link to=\"/all\">All</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <DescriptionIcon />\r\n                                <Link to=\"/news\">News</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <ImageIcon />\r\n                                <Link to=\"/images\">Images</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <LocalOfferIcon />\r\n                                <Link to=\"/shopping\">Shopping</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <RoomIcon />\r\n                                <Link to=\"/maps\">Maps</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <MoreVertIcon />\r\n                                <Link to=\"/more\">More</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"searchPage__optionsRight\">\r\n                            <div className=\"searchPage__option\">\r\n                                <Link to=\"/settings\">Settings</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <Link to=\"/tools\">Tools</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {term && (\r\n                <div className=\"searchPage__results\">\r\n                    <p className=\"searchPage__resultCounter\">\r\n                        About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime} seconds) for {term}\r\n                    </p>\r\n\r\n                    {data?.items.map(item => (\r\n                        <div className=\"searchPage__result\">\r\n                            <a className=\"searchPage__resultLink\" href={item.link}>\r\n                                {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src && (\r\n                                    <img \r\n                                        className=\"searchPage__resultImage\"\r\n                                        src={\r\n                                            item.pagemap?.cse_image[0]?.src\r\n                                        }\r\n                                    />\r\n                                )}\r\n                                {item.displayLink} ▼\r\n                            </a>\r\n                            <a href={item.link} className=\"searchPage__resultTitle\">\r\n                                <h2>{item.title}</h2>\r\n                            </a>\r\n                            <p className=\"searchPage__resultSnippet\">\r\n                                {item.snippet}\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport SearchPage from './pages/SearchPage';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/search\">\r\n            <SearchPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducer, { initialState } from './context/reducer';\r\nimport { StateProvider } from './context/StateProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}